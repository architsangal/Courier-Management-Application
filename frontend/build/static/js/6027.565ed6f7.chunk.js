"use strict";(self.webpackChunk_coreui_coreui_free_react_admin_template=self.webpackChunk_coreui_coreui_free_react_admin_template||[]).push([[6027],{76027:function(e,l,s){s.r(l);s(72791);var a=s(78983),i=s(54281),r=s(80184);l.default=function(){return(0,r.jsxs)(a.rb,{children:[(0,r.jsx)(a.b7,{xs:12,children:(0,r.jsxs)(a.xH,{className:"mb-4",children:[(0,r.jsx)(a.bn,{children:(0,r.jsx)("strong",{children:"React Floating labels"})}),(0,r.jsxs)(a.sl,{children:[(0,r.jsxs)("p",{className:"text-medium-emphasis small",children:["Wrap a pair of ",(0,r.jsx)("code",{children:"<CFormInput>"})," and ",(0,r.jsx)("code",{children:"<CFormLabel>"})," ","elements in ",(0,r.jsx)("code",{children:"CFormFloating"})," to enable floating labels with textual form fields. A ",(0,r.jsx)("code",{children:"placeholder"})," is required on each ",(0,r.jsx)("code",{children:"<CFormInput>"})," ","as our method of CSS-only floating labels uses the ",(0,r.jsx)("code",{children:":placeholder-shown"})," ","pseudo-element. Also note that the ",(0,r.jsx)("code",{children:"<CFormInput>"})," must come first so we can utilize a sibling selector (e.g., ",(0,r.jsx)("code",{children:"~"}),")."]}),(0,r.jsxs)(i.q3,{href:"forms/floating-labels",children:[(0,r.jsxs)(a.j3,{className:"mb-3",children:[(0,r.jsx)(a.jO,{type:"email",id:"floatingInput",placeholder:"name@example.com"}),(0,r.jsx)(a.L8,{htmlFor:"floatingInput",children:"Email address"})]}),(0,r.jsxs)(a.j3,{children:[(0,r.jsx)(a.jO,{type:"password",id:"floatingPassword",placeholder:"Password"}),(0,r.jsx)(a.L8,{htmlFor:"floatingPassword",children:"Password"})]})]}),(0,r.jsxs)("p",{className:"text-medium-emphasis small",children:["When there's a ",(0,r.jsx)("code",{children:"value"})," already defined, ",(0,r.jsx)("code",{children:"<CFormLabel>"}),"s will automatically adjust to their floated position."]}),(0,r.jsx)(i.q3,{href:"forms/floating-labels",children:(0,r.jsxs)(a.j3,{children:[(0,r.jsx)(a.jO,{type:"email",id:"floatingInputValue",placeholder:"name@example.com",defaultValue:"test@example.com"}),(0,r.jsx)(a.L8,{htmlFor:"floatingInputValue",children:"Input with value"})]})})]})]})}),(0,r.jsx)(a.b7,{xs:12,children:(0,r.jsxs)(a.xH,{className:"mb-4",children:[(0,r.jsxs)(a.bn,{children:[(0,r.jsx)("strong",{children:"React Floating labels"})," ",(0,r.jsx)("small",{children:"Textareas"})]}),(0,r.jsxs)(a.sl,{children:[(0,r.jsxs)("p",{className:"text-medium-emphasis small",children:["By default, ",(0,r.jsx)("code",{children:"<CFormTextarea>"}),"s will be the same height as"," ",(0,r.jsx)("code",{children:"<CFormInput>"}),"s."]}),(0,r.jsx)(i.q3,{href:"forms/floating-labels#textareas",children:(0,r.jsxs)(a.j3,{children:[(0,r.jsx)(a.PB,{id:"floatingTextarea",placeholder:"Leave a comment here"}),(0,r.jsx)(a.L8,{htmlFor:"floatingTextarea",children:"Comments"})]})}),(0,r.jsxs)("p",{className:"text-medium-emphasis small",children:["To set a custom height on your ",(0,r.jsx)("code",{children:"<CFormTextarea;>"}),", do not use the"," ",(0,r.jsx)("code",{children:"rows"})," attribute. Instead, set an explicit ",(0,r.jsx)("code",{children:"height"})," (either inline or via custom CSS)."]}),(0,r.jsx)(i.q3,{href:"forms/floating-labels#textareas",children:(0,r.jsxs)(a.j3,{children:[(0,r.jsx)(a.PB,{placeholder:"Leave a comment here",id:"floatingTextarea2",style:{height:"100px"}}),(0,r.jsx)(a.L8,{htmlFor:"floatingTextarea2",children:"Comments"})]})})]})]})}),(0,r.jsx)(a.b7,{xs:12,children:(0,r.jsxs)(a.xH,{className:"mb-4",children:[(0,r.jsxs)(a.bn,{children:[(0,r.jsx)("strong",{children:"React Floating labels"})," ",(0,r.jsx)("small",{children:"Selects"})]}),(0,r.jsxs)(a.sl,{children:[(0,r.jsxs)("p",{className:"text-medium-emphasis small",children:["Other than ",(0,r.jsx)("code",{children:"<CFormInput>"}),", floating labels are only available on"," ",(0,r.jsx)("code",{children:"<CFormSelect>"}),"s. They work in the same way, but unlike"," ",(0,r.jsx)("code",{children:"<CFormInput>"}),"s, they'll always show the"," ",(0,r.jsx)("code",{children:"<CFormLabel>"})," in its floated state."," ",(0,r.jsxs)("strong",{children:["Selects with ",(0,r.jsx)("code",{children:"size"})," and ",(0,r.jsx)("code",{children:"multiple"})," are not supported."]})]}),(0,r.jsx)(i.q3,{href:"forms/floating-labels#selects",children:(0,r.jsxs)(a.j3,{children:[(0,r.jsxs)(a.LX,{id:"floatingSelect","aria-label":"Floating label select example",children:[(0,r.jsx)("option",{children:"Open this select menu"}),(0,r.jsx)("option",{value:"1",children:"One"}),(0,r.jsx)("option",{value:"2",children:"Two"}),(0,r.jsx)("option",{value:"3",children:"Three"})]}),(0,r.jsx)(a.L8,{htmlFor:"floatingSelect",children:"Works with selects"})]})})]})]})}),(0,r.jsx)(a.b7,{xs:12,children:(0,r.jsxs)(a.xH,{className:"mb-4",children:[(0,r.jsxs)(a.bn,{children:[(0,r.jsx)("strong",{children:"React Floating labels"})," ",(0,r.jsx)("small",{children:"Layout"})]}),(0,r.jsxs)(a.sl,{children:[(0,r.jsx)("p",{className:"text-medium-emphasis small",children:"When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes."}),(0,r.jsx)(i.q3,{href:"forms/floating-labels#layout",children:(0,r.jsxs)(a.rb,{xs:{gutter:2},children:[(0,r.jsx)(a.b7,{md:!0,children:(0,r.jsxs)(a.j3,{children:[(0,r.jsx)(a.jO,{type:"email",id:"floatingInputGrid",placeholder:"name@example.com",defaultValue:"email@example.com"}),(0,r.jsx)(a.L8,{htmlFor:"floatingInputGrid",children:"Email address"})]})}),(0,r.jsx)(a.b7,{md:!0,children:(0,r.jsxs)(a.j3,{children:[(0,r.jsxs)(a.LX,{id:"floatingSelectGrid","aria-label":"Floating label select example",children:[(0,r.jsx)("option",{children:"Open this select menu"}),(0,r.jsx)("option",{value:"1",children:"One"}),(0,r.jsx)("option",{value:"2",children:"Two"}),(0,r.jsx)("option",{value:"3",children:"Three"})]}),(0,r.jsx)(a.L8,{htmlFor:"floatingSelectGrid",children:"Works with selects"})]})})]})})]})]})})]})}}}]);
//# sourceMappingURL=6027.565ed6f7.chunk.js.map